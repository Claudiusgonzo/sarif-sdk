<Project ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">  
  <!-- NOTE: Requires settings 'JsonSchemaFile', 'BsoaVersion' 
       TEST: 
         - Build with no Autogenerated
         - Build with Autogenerated up-to-date
         - Build with Autogenerated up-to-date and Sarif.dll up-to-date
         - Edit Schema and build (confirm re-generate)
         - Rebuild with no Autogenerated
         - Rebuild with Autogenerated up-to-date
         - Build with BSOA\bin tools removed.
         - Visual Studio sees Autogenerated as included (IntelliSense ok).
         - Visual Studio build with no Autogenerated succeeds.
  -->
  <PropertyGroup>
    <BsoaFromJSchema>$(MSBuildThisFileDirectory)\bin\BSOA.FromJSchema.exe</BsoaFromJSchema>
    <BsoaGenerator>$(MSBuildThisFileDirectory)\bin\BSOA.Generator.exe</BsoaGenerator>
    <_ObjectModelOutputDirectory>$(MSBuildProjectDirectory)\Autogenerated</_ObjectModelOutputDirectory>
  </PropertyGroup>

  <!-- Capture whether Autogenerated files exist before target runs -->
  <PropertyGroup Condition="!Exists('$(_ObjectModelOutputDirectory)')">
    <ObjectModelDidNotExist>true</ObjectModelDidNotExist>
  </PropertyGroup>

  <ItemGroup>
    <GeneratorInputs Include="@(JsonSchemaFile)" />
    <GeneratorInputs Include="$(MSBuildThisFileDirectory)\Templates\**\*.cs" />
    <GeneratorInputs Include="$(MSBuildThisFileDirectory)\Schemas\Sarif.postReplacements.json" />
  </ItemGroup>

  <!-- Regenerate the Object Model if the Schema is updated or the Autogenerated\SarifLog.cs class is missing -->
  <!-- Must specify a single specific Outputs class, or target runs every time. -->
  <Target Name="BuildObjectModel" BeforeTargets="BeforeBuild;BeforeRebuild" Inputs="@(GeneratorInputs)" Outputs="$(_ObjectModelOutputDirectory)\Internal\SarifLogDatabase.cs">
    <Message Importance="high" Text="Installing BSOA Generators..." />
    <Exec Command="dotnet tool install BSOA.Generator --version &quot;$(BsoaVersion)&quot; --tool-path &quot;$(MSBuildThisFileDirectory)\bin&quot;" IgnoreExitCode="true" />
    <Exec Command="dotnet tool install BSOA.FromJSchema  --version &quot;$(BsoaVersion)&quot; --tool-path &quot;$(MSBuildThisFileDirectory)\bin&quot;" IgnoreExitCode="true" />
    
    <Message Importance="high" Text="Generating SARIF object model..." />
    <Exec Command="&quot;$(BsoaFromJSchema)&quot; &quot;@(JsonSchemaFile)&quot; &quot;$(MSBuildThisFileDirectory)\Schemas\Sarif.schema.json&quot; &quot;SarifLog&quot; &quot;Microsoft.CodeAnalysis.Sarif&quot;" />
    <Exec Command="&quot;$(BsoaGenerator)&quot; &quot;$(MSBuildThisFileDirectory)\Schemas\Sarif.schema.json&quot; &quot;$(_ObjectModelOutputDirectory)&quot; &quot;$(MSBuildThisFileDirectory)\Templates\Sarif&quot; &quot;$(MSBuildThisFileDirectory)\Schemas\Sarif.postReplacements.json&quot;" />

    <Message Text="Done. Generated classes from @(JsonSchemaFile) -> $(_ObjectModelOutputDirectory)"/>

    <!-- Include Autogenerated files only if folder didn't exist before target.
      Otherwise, they've already been included by the base project.
      Removing them in the base project and adding them here works for MSBuild, 
      but breaks Visual Studio IntelliSense.
    -->
    <ItemGroup Condition="$(ObjectModelDidNotExist) == 'true'">
      <Compile Include="$(_ObjectModelOutputDirectory)\**\*.cs"  />
    </ItemGroup>
  </Target>
</Project>